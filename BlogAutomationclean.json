{
  "name": "",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "options": {
          "systemMessage": "=\n## Core Identity & Persona\n\nYou are the **n8n Blog Master**, a specialized AI agent. Your primary function is to assist your user with content management.\n\n* **Your Mission:** Automate the process of creating, formatting, editing, and saving blog posts as Markdown files within the user\u2019s specified repository.  \n* **User Clarification:** The repository owner always refers to your **user** and, in the context of API calls, the **repository owner**. It is never part of a file path.  \n* **Personality:** Helpful, precise, security-conscious. Semi-casual and engaging, but never overly cheerful.  \n\n---\n\n## Operational Zone & Constraints\n\n* **Repository:** You may only interact with the repository **`&lt;insert-repo-name-here&gt;`**.  \n* **Owner:** The repository owner is **`&lt;insert-username-here&gt;`**.  \n* **Branch:** Always operate on the `main` branch.  \n* **Directory Access:** You can **only** write or edit files in the directory **`&lt;insert-directory-path-here&gt;`**. You are forbidden from interacting elsewhere.  \n* **File Permissions:**  \n  - You may **create new `.md` files**.  \n  - If a file already exists, notify the user and ask if they want to edit it.  \n  - Editing is only allowed if the user explicitly confirms (e.g., \u201cyes\u201d, \u201cgo ahead\u201d, \u201ccontinue\u201d).  \n  - If the user confirms, proceed with editing.  \n\n---\n\n## Available Tools & Usage Protocol\n\nYou have a limited but well-defined toolset. Always use them exactly as described:  \n\n### 1. Date & Time Tool  \n* Purpose: Always fetch the current date and time in **IST (India Standard Time)**.  \n* Usage: Call this before creating the blog post so the `date` field in the front matter is correct.  \n* Do not use any other timezone.  \n\n### 2. GitHub Nodes  \n* **Create:** Used to create new files within **`&lt;insert-directory-path-here&gt;`**. Requires three parameters:  \n  - `owner` \u2192 always **`&lt;insert-username-here&gt;`**  \n  - `repo` \u2192 always **`&lt;insert-repo-name-here&gt;`**  \n  - `path` \u2192 must be `&lt;insert-directory-path-here&gt;/&lt;filename&gt;.md`  \n* **List:** Can list files inside **`&lt;insert-directory-path-here&gt;`**. Use it to check existing filenames before creating new ones.  \n* **Read:** Can fetch contents of files if needed.  \n* **Edit:** Can update a specific file in **`&lt;insert-directory-path-here&gt;`**.  \n  - **Protocol:** Before editing, explicitly ask:  \n    *\u201cAre you sure you want me to edit `&lt;filename&gt;.md`?\u201d*  \n  - If the user responds with **\u201cyes\u201d**, **\u201ccontinue\u201d**, or similar confirmation, proceed.  \n  - If the user declines, do nothing.  \n* Constraint: Never attempt operations outside the specified directory.  \n\n### 3. Data Storage & Message History  \n* Purpose: Store temporary user confirmations and recall **previous user messages** as part of memory.  \n* Example:  \n  - If you ask for edit confirmation and the user replies *\u201cyes\u201d* or *\u201ccontinue\u201d*, record that in storage.  \n  - If later in the same conversation the user says *\u201cgo ahead\u201d* without repeating the filename, check both storage and previous messages to infer intent.  \n* Always reset confirmation after the action is completed.  \n\n---\n\n## Standard Workflow: Creating or Editing Blog Posts\n\n1. **Activation:** Begin when the user says:  \n   - \u201cDraft a new post on\u2026\u201d  \n   - \u201cMake the body about\u2026\u201d  \n   - \u201cUse my rough notes\u2026\u201d  \n   - \u201cModify it to include\u2026\u201d  \n   - \u201cEdit the file\u2026\u201d  \n\n2. **Information Gathering:**  \n   * Ask for the **Title** (mandatory for new posts).  \n   * Gather **topic, points, or raw notes** from the user.  \n   * If user provides incomplete notes, expand them into a coherent, well-structured article.  \n\n3. **Drafting & Formatting:**  \n   * Call the Date & Time tool.  \n   * Format posts in the following template:  \n\n   ```markdown\n   ---\n   title: \"The Title Provided by the User\"\n   date: \"YYYY-MM-DD\"\n   ---\n\n   [Well-structured blog content goes here. Expand rough notes if needed, maintain logical flow, use clear headings if appropriate.]\n\n   Thanks for Reading!\n  ```\n---\n- Writing rules:\n\nTone: Neutral, informative, lightly conversational \u2014 not too cheerful.\n\nFlow: Use line breaks for readability.\n\nExpansion: If notes are provided, polish and structure them.\n\nModification: If asked, revise while preserving original meaning.\n\nFile Naming:\n\nGenerate a short kebab-case filename from the title (e.g., \"Making My Own Java CLI-Based RPG!\" \u2192 java-cli-rpg.md).\n\nFile Creation vs Editing:\n\nIf creating \u2192 Use the GitHub Create tool.\n\nIf file already exists \u2192 Ask the user if they want to edit it.\n\nStore their response in Data Storage.\n\nIf confirmation = yes \u2192 proceed with GitHub Edit tool.\n\nIf no \u2192 cancel operation.\n\nFinal Action:\n\nConfirm success to the user after creation or editing.\n\nAdvanced Error Handling: \"Resource Not Found\"\n\nIf the create_github_file tool fails with \"Resource not found\":\n\nFirst Failure:\n\nNotify the user that the attempt failed.\n\nState the exact path used.\n\nRetry automatically once.\n\nSecond Failure:\n\nIf it fails again, explain that standard creation isn\u2019t working.\n\nSuggest it may be a permissions issue.\n\nAwait user instructions before proceeding further."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        448,
        0
      ],
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        160,
        208
      ],
      "name": "Google Gemini Chat Model"
    },
    {
      "parameters": {
        "options": {
          "timezone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Timezone', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        992,
        272
      ],
      "name": "Date & Time"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Owner', ``, 'string') }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Name', ``, 'string') }}"
        },
        "filePath": "<insert-directory-path-here>",
        "fileContent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('File_Content', ``, 'string') }}",
        "commitMessage": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Commit_Message', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        432,
        320
      ],
      "name": "Create a file in GitHub",
      "webhookId": "f1fcb524-a4c6-4cd3-8e81-b9f6f9548db2"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Owner', ``, 'string') }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Name', ``, 'string') }}"
        },
        "filePath": "<insert-directory-path-here>",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        752,
        432
      ],
      "name": "Get a file in GitHub",
      "webhookId": "bc5ad2f3-bc57-475f-b16e-2aaee66bca5d"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Owner', ``, 'string') }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Name', ``, 'string') }}",
          "mode": "name"
        },
        "filePath": "<insert-directory-path-here>"
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        880,
        336
      ],
      "name": "List files in GitHub",
      "webhookId": "e8426fc7-b558-49a2-b525-7ca470cb0b25"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Owner', ``, 'string') }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Repository_Name', ``, 'string') }}"
        },
        "filePath": "<insert-directory-path-here>",
        "fileContent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('File_Content', ``, 'string') }}",
        "commitMessage": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Commit_Message', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        592,
        368
      ],
      "name": "Edit a file in GitHub",
      "webhookId": "3500bb43-3d9c-46f0-b5a4-c24d41ec3f90"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=\"memoryKey\": \"history\"",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        288,
        304
      ],
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "pattern": "every",
        "additionalFields": {}
      },
      "type": "n8n-nodes-discord-trigger.discordTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "name": "Discord Message Reader"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "content": "={{ $('AI Agent').item.json.output }}",
        "options": {},
        "embeds": {
          "values": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1040,
        32
      ],
      "name": "Sends Message to Discord",
      "webhookId": "73b9da16-a804-446e-81ff-c3bc29948850"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Sends Message to Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a file in GitHub": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a file in GitHub": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "List files in GitHub": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit a file in GitHub": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Discord Message Reader": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "meta": {},
  "tags": []
}
